{"version":3,"sources":["../src/js/progressbar.js"],"names":["Progressbar","el","time","delta_value","delta_time","value","progressbar","step_time","Math","floor","step","console","log","interval","setInterval","sliderSlide","style","width","clearInterval"],"mappings":"AAAA;;;;;;;;IAEMA,W;;;AACJ,uBAAYC,EAAZ,EAAgBC,IAAhB,EAAsB;AAAA;;AACpB,SAAKC,WAAL,GAAmB,GAAnB,CADoB,CACI;;AACxB,SAAKC,UAAL,GAAkB,KAAKF,IAAL,CAAUA,IAAV,CAAlB,CAFoB,CAEe;;AAEnC,SAAKG,KAAL,GAAa,CAAb;AACA,SAAKC,WAAL,GAAmBL,EAAnB;AACD;;;;yBAEIC,K,EAAM;AACTA,MAAAA,KAAI,GAAGA,KAAI,GAAC,IAAZ,CADS,CACS;;AAClB,UAAIK,SAAS,GAAGL,KAAI,GAAG,GAAvB,CAFS,CAEmB;;AAC5BK,MAAAA,SAAS,GAAGA,SAAS,GAAG,KAAKJ,WAA7B,CAHS,CAGiC;;AAC1C,aAAOK,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAP;AACD;;;4BAEO;AACN,WAAKG,IAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;;2BAEM;AAAA;;AACL,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAEhC;AACA,QAAA,KAAI,CAACT,KAAL,IAAc,KAAI,CAACF,WAAnB,CAHgC,CAKhC;;AACA,YAAG,IAAI,KAAI,CAACE,KAAZ,EAAmB;AACjB,UAAA,KAAI,CAACA,KAAL,GAAa,GAAb;AACD,SAR+B,CAShC;;;AACA,YAAG,MAAM,KAAI,CAACA,KAAd,EAAqB;AACnB,UAAA,KAAI,CAACA,KAAL,GAAa,CAAb;AACAU,UAAAA,WAAW,CAAC,MAAD,CAAX;AACD,SAb+B,CAehC;;;AACA,QAAA,KAAI,CAACT,WAAL,CAAiBU,KAAjB,CAAuBC,KAAvB,GAA+B,KAAI,CAACZ,KAAL,GAAa,GAA5C;AAED,OAlB0B,EAkBxB,KAAKD,UAlBmB,CAA3B;AAmBD;;;2BAEM;AACLc,MAAAA,aAAa,CAAC,KAAKL,QAAN,CAAb;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD","sourcesContent":["'use strict';\r\n\r\nclass Progressbar {\r\n  constructor(el, time) {\r\n    this.delta_value = 0.4; // precision (how many % each step)\r\n    this.delta_time = this.time(time); // time needed for each step\r\n\r\n    this.value = 0;\r\n    this.progressbar = el;\r\n  }\r\n\r\n  time(time) {\r\n    time = time*1000; // convert seconds to miliseconds\r\n    let step_time = time / 100; // how much time needed for each step\r\n    step_time = step_time * this.delta_value; // step_time adapted to precision\r\n    return Math.floor(step_time);\r\n  }\r\n\r\n  start() {\r\n    this.step();\r\n    console.log('ProgressBar: Running...');\r\n  }\r\n\r\n  step() {\r\n    this.interval = setInterval(() => {\r\n\r\n      // add width\r\n      this.value += this.delta_value;\r\n\r\n      // if out of min-range then set to max-range\r\n      if(0 > this.value) {\r\n        this.value = 100;\r\n      }\r\n      // if out of max-range then set to min-range + and run a function\r\n      if(100 < this.value) {\r\n        this.value = 0;\r\n        sliderSlide('next');\r\n      }\r\n\r\n      // add width to the progressbar\r\n      this.progressbar.style.width = this.value + '%';\r\n\r\n    }, this.delta_time);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.interval);\r\n    console.log('ProgressBar: Paused');\r\n  }\r\n}\r\n"],"file":"progressbar.js"}